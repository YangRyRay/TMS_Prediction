# use a fixed random seed to guarantee that when you run the code twice you will get the same outcome
manual_seed: 0
# model configuration
model:
  # model class, e.g. UNet3D, ResidualUNet3D
  name: UNet3D #ResidualUNet3D #
  # number of input channels to the model
  in_channels: 6
  # number of output channels
  out_channels: 3
  # determines the order of operators in a single layer (gcr - GroupNorm+Conv3d+ReLU)
  layer_order: gcr
  # number of features at each level of the U-Net
  f_maps: [16, 32, 64, 128, 256]
  # number of groups in the groupnorm
  num_groups: 8
  # if True applies the final normalization layer (sigmoid or softmax), otherwise the networks returns the output from the final convolution layer; use False for regression problems, e.g. de-noising
  is_segmentation: false
# trainer configuration
trainer:
  # path to the checkpoint directory
  checkpoint_dir: "/home/jq748/TMS/pytorch-3dunet-master-test/checkpoint_newdata_3dunet_withoutbone_mseloss_119"
  # path to latest checkpoint; if provided the training will be resumed from that checkpoint
  resume:  null #"/dfs/data/wangyx57_data/model/TMS_3Dunet/pytorch-3dunet-master-2/checkpoint_newdata_3dunet_angulargradient/last_checkpoint.pytorch" # 
  # path to the best_checkpoint.pytorch; to be used for fine-tuning the model with additional ground truth
  # make sure to decrease the learning rate in the optimizer config accordingly
  pre_trained: "/home/jq748/TMS/pytorch-3dunet-master-test/checkpoint_newdata_3dunet_withoutbone_mseloss/last_checkpoint.pytorch"
  # how many iterations between validations
  validate_after_iters: 200
  # how many iterations between tensorboard logging
  log_after_iters: 20 #20
  # max number of epochs
  max_num_epochs: 10000
  # max number of iterations
  max_num_iterations: 2000000
  # model with higher eval score is considered better
  eval_score_higher_is_better: false
# optimizer configuration
optimizer:
  # initial learning rate
  learning_rate: 0.0005 #0.002
  # weight decay
  weight_decay: 0.0001
# loss function configuration
loss:
  # loss function to be used during training
  name: MSELoss #_Angleloss #SmoothL1Loss
  # a target value that is ignored and does not contribute to the input gradient
  ignore_index: null
# evaluation metric configuration
eval_metric:
  # peak signal to noise ration
  name: MSE #PSNR
  # a target label that is ignored during metric evaluation
  ignore_index: null
# learning rate scheduler configuration
lr_scheduler:
  # reduce learning rate when evaluation metric plateaus
  name: ReduceLROnPlateau
  # use 'max' if eval_score_higher_is_better=True, 'min' otherwise
  mode: max
  # factor by which learning rate will be reduced
  factor: 0.5
  # number of *validation runs* with no improvement after which learning rate will be reduced
  patience: 500 #50
# data loaders configuration
loaders:
  # class of the HDF5 dataset, currently StandardHDF5Dataset and LazyHDF5Dataset are supported.
  # When using LazyHDF5Dataset make sure to set `num_workers = 1`, due to a bug in h5py which corrupts the data
  # when reading from multiple threads.
  dataset: StandardHDF5Dataset
  # batch dimension; if number of GPUs is N > 1, then a batch_size of N * batch_size willccc automatically be taken for DataParallel
  batch_size: 2
  # how many subprocesses to use for data loading
  num_workers: 0
  # path to the raw data within the H5
  raw_internal_path: raw
  # path to the the label data within the H5
  label_internal_path: label
  # path to the pixel-wise weight map withing the H5 if present
  weight_internal_path: null
  # configuration of the train loader
  train:
    # absolute paths to the training datasets; if a given path is a directory all H5 files ('*.h5', '*.hdf', '*.hdf5', '*.hd5')
    # inside this this directory will be included as well (non-recursively)
    file_paths:
        - [["/rfanfs/pnl-zorro/home/jq748/TMS/Processed_data/TMS_RemoveBoneAll_h5_train_split/1/"], ["/rfanfs/pnl-zorro/home/jq748/TMS/Processed_data/TMS_RemoveBoneAll_h5_train_split/2/"], ["/rfanfs/pnl-zorro/home/jq748/TMS/Processed_data/TMS_RemoveBoneAll_h5_train_split/3/"], ["/rfanfs/pnl-zorro/home/jq748/TMS/Processed_data/TMS_RemoveBoneAll_h5_train_split/4/"], ["/rfanfs/pnl-zorro/home/jq748/TMS/Processed_data/TMS_RemoveBoneAll_h5_train_split/5/"], ["/rfanfs/pnl-zorro/home/jq748/TMS/Processed_data/TMS_RemoveBoneAll_h5_train_split/6/"], ["/rfanfs/pnl-zorro/home/jq748/TMS/Processed_data/TMS_RemoveBoneAll_h5_train_split/7/"], ["/rfanfs/pnl-zorro/home/jq748/TMS/Processed_data/TMS_RemoveBoneAll_h5_train_split/8/"], ["/rfanfs/pnl-zorro/home/jq748/TMS/Processed_data/TMS_RemoveBoneAll_h5_train_split/9/"], ["/rfanfs/pnl-zorro/home/jq748/TMS/Processed_data/TMS_RemoveBoneAll_h5_train_split/10/"], ["/rfanfs/pnl-zorro/home/jq748/TMS/Processed_data/TMS_RemoveBoneAll_h5_train_split/11/"], ["/rfanfs/pnl-zorro/home/jq748/TMS/Processed_data/TMS_RemoveBoneAll_h5_train_split/12/"], ["/rfanfs/pnl-zorro/home/jq748/TMS/Processed_data/TMS_RemoveBoneAll_h5_train_split/13/"], ["/rfanfs/pnl-zorro/home/jq748/TMS/Processed_data/TMS_RemoveBoneAll_h5_train_split/14/"], ["/rfanfs/pnl-zorro/home/jq748/TMS/Processed_data/TMS_RemoveBoneAll_h5_train_split/15/"], ["/rfanfs/pnl-zorro/home/jq748/TMS/Processed_data/TMS_RemoveBoneAll_h5_train_split/16/"], ["/rfanfs/pnl-zorro/home/jq748/TMS/Processed_data/TMS_RemoveBoneAll_h5_train_split/17/"], ["/rfanfs/pnl-zorro/home/jq748/TMS/Processed_data/TMS_RemoveBoneAll_h5_train_split/18/"], ["/rfanfs/pnl-zorro/home/jq748/TMS/Processed_data/TMS_RemoveBoneAll_h5_train_split/19/"], ["/rfanfs/pnl-zorro/home/jq748/TMS/Processed_data/TMS_RemoveBoneAll_h5_train_split/20/"], ["/rfanfs/pnl-zorro/home/jq748/TMS/Processed_data/TMS_RemoveBoneAll_h5_train_split/21/"], ["/rfanfs/pnl-zorro/home/jq748/TMS/Processed_data/TMS_RemoveBoneAll_h5_train_split/22/"], ["/rfanfs/pnl-zorro/home/jq748/TMS/Processed_data/TMS_RemoveBoneAll_h5_train_split/23/"], ["/rfanfs/pnl-zorro/home/jq748/TMS/Processed_data/TMS_RemoveBoneAll_h5_train_split/24/"]] #val/try_train/" #"PATH_TO_TRAIN_SET"
        #- "/dfs/data/wangyx57_data/DB/TMS_Data/TMS_new_RemoveBoneAll_h5_testcase/test_train/"

    # SliceBuilder configuration, i.e. how to iterate over the input volume patch-by-patch
    slice_builder:
      # SliceBuilder class
      name: SliceBuilder
      # train patch size given to the network (adapt to fit in your GPU mem, generally the bigger patch the better)
      #patch_shape: [32, 128, 128]
      patch_shape: [120,220,180] #[32, 128, 128] #[32, 64, 64]
      # train stride between patches
      stride_shape: [120,220,180] #[32, 128, 128]

    # data transformations/augmentations
    transformer:
      raw:
        # apply min-max scaling and map the input to [-1, 1]
        #- name: Standardize
        #- name: RandomFlip
        #- name: RandomRotate90
        #- name: RandomRotate
          # rotate only in ZY only since most volumetric data is anisotropic
        #  axes: [[2, 1]]
        #  angle_spectrum: 15
        #  mode: reflect
        - name: ToTensor
          expand_dims: true
      label:
        # apply min-max scaling and map the input to [-1, 1]
        #- name: Normalize
        #- name: RandomFlip
        #- name: RandomRotate90
        #- name: RandomRotate
          # rotate only in ZY only since most volumetric data is anisotropic
        #  axes: [[2, 1]]
        #  angle_spectrum: 15
        #  mode: reflect
        - name: ToTensor
          expand_dims: true

  # configuration of the validation loaders
  val:
    # paths to the validation datasets; if a given path is a directory all H5 files ('*.h5', '*.hdf', '*.hdf5', '*.hd5')
    # inside this this directory will be included as well (non-recursively)
    file_paths:
        - "/rfanfs/pnl-zorro/home/jq748/TMS/Processed_data/TMS_RemoveBoneAll_h5_train_split/val/" #/try/" #"PATH_TO_VAL_SET"
        #- "/dfs/data/wangyx57_data/DB/TMS_Data/TMS_new_RemoveBoneAll_h5_testcase/test_val/"
    # SliceBuilder configuration
    slice_builder:
      # SliceBuilder class
      name: SliceBuilder
      # validation patch (can be bigger than train patch since there is no backprop)
      patch_shape: [120,220,180] #[32, 128, 128]
      # validation stride (validation patches doesn't need to overlap)
      stride_shape: [120,220,180] #[32, 128, 128]

    # no data augmentation during validation
    transformer:
      raw:
        # apply min-max scaling and map the input to [-1, 1]
        #- name: Normalize
        - name: ToTensor
          expand_dims: true
      label:
        # apply min-max scaling and map the input to [-1, 1]
        #- name: Normalize
        - name: ToTensor
          expand_dims: true
